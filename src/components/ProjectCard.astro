---
const { project } = Astro.props;
const { slug } = project;
const { title, thumbnail, description, categories, couleur } = project.data;

// Utiliser l'URL externe pour l'instant, ou placeholder
const imageUrl = thumbnail.startsWith('http') ? thumbnail : '/placeholder.jpg';
---

<article class="project-card" style={`--project-color: ${couleur || '#3085a3'}`}>
  <a href={`/projects/${slug}`}>
    <div class="project-image">
      <img src={imageUrl} alt={title} loading="lazy" />
      <div class="overlay"></div>
    </div>
    <div class="project-info">
      <h2>{title}</h2>
      {description && <p>{description}</p>}
      {categories.length > 0 && (
        <div class="categories">
          {categories.slice(0, 2).map(cat => (
            <span class="category">{cat}</span>
          ))}
        </div>
      )}
    </div>
  </a>
</article>

<style>
  .project-card {
    position: relative;
    overflow: hidden;
    border-radius: 8px;
    transition: transform 0.3s ease;
  }
  
  .project-card:hover {
    transform: translateY(-5px);
  }
  
  .project-card:hover .overlay {
    background-color: var(--project-color);
    opacity: 0.8;
  }
  
  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: transparent;
    transition: all 0.3s ease;
    opacity: 0;
  }
  
  .project-image {
    position: relative;
    aspect-ratio: 16/9;
    overflow: hidden;
  }
  
  .project-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .project-info {
    padding: 1rem;
  }
  
  .categories {
    display: flex;
    gap: 0.5rem;
    margin-top: 0.5rem;
  }
  
  .category {
    font-size: 0.875rem;
    padding: 0.25rem 0.5rem;
    background: #f0f0f0;
    border-radius: 4px;
  }
  
  a {
    text-decoration: none;
    color: inherit;
  }
</style>